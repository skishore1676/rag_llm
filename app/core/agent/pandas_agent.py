import os
import logging
import pandas as pd
from llama_index.experimental.query_engine import PandasQueryEngine
from ..llm_factory import create_llm

logger = logging.getLogger(__name__)

class PandasAgent:
    """
    A pandas-based agent for querying and analyzing Excel files using LLM-generated Python code.
    """

    def __init__(self, excel_path: str, config: dict):
        """
        Initialize the PandasAgent.

        Args:
            excel_path (str): Absolute path to the .xlsx file.
            config (dict): The application configuration dictionary.

        Raises:
            FileNotFoundError: If the excel_path does not exist or is not a file.
        """
        if not os.path.isfile(excel_path):
            raise FileNotFoundError(f"File not found: {excel_path}")

        # Load the Excel file into a pandas DataFrame
        self.df = pd.read_excel(excel_path)

        # Create the LLM using the factory function
        self.llm = create_llm(config)

        # Create the PandasQueryEngine
        self.query_engine = PandasQueryEngine(df=self.df, llm=self.llm)

    def query(self, question: str) -> str:
        """
        Query the pandas DataFrame using natural language.

        Args:
            question (str): The natural language question about the data.

        Returns:
            str: The answer generated by the LLM and executed pandas code, or an error message.
        """
        try:
            response = self.query_engine.query(question)
            return str(response)
        except Exception as e:
            logger.error(f"An error occurred during the pandas query: {str(e)}")
            return "I was unable to answer that question. The generated code resulted in an error."
